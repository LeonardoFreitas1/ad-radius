{"version":3,"sources":["styles.js","index.js","App.js"],"names":["GlobalStyle","createGlobalStyle","Logo","style","div","Container","Surface","Input","input","Main","Phrase","p","FaderInput","Code","Svg","svg","Span","span","ReactDOM","render","useState","tlValue","usetlValue","trValue","usetrValue","blValue","useblValue","brValue","usebrValue","totalValue","usetotalValue","AllUpdated","useallUpdated","Copied","usecopied","AllBorders","SpecifyBorders","id","type","max","onChange","e","target","value","min","Tooltip","title","color","arrow","placement","onClick","code","dummy","document","createElement","body","appendChild","select","setSelectionRange","execCommand","removeChild","copyText","viewBox","fill","d","Snackbar","open","onClose","message","getElementById"],"mappings":"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","file":"static/js/main.e39708aa.chunk.js","sourcesContent":["import style, { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n html {\r\n  background: #3d3d3d;\r\n}\r\n\r\nbody {\r\n  background: #3d3d3d;\r\n  font: 12px 'Lucida Grande', Arial, sans-serif;\r\n}\r\n`\r\n\r\nexport const Logo = style.div`\r\n    background: url('https://border-radius.com/border_radius.png');\r\n    height: 35px;\r\n    position: sticky;\r\n    margin: auto;\r\n    width: 283px;\r\n    margin-bottom: 20px;\r\n    align-content: center;\r\n`;\r\n\r\nexport const Container = style.div`\r\n    margin-left: auto;\r\n    width: 550px;\r\n    margin: 0 auto;\r\n    position: relative;\r\n   \r\n`;\r\n\r\nexport const Surface = style.div`\r\n    background: #e9eaee;\r\n    border: 2px solid #ffffff;\r\n    padding: 44px 40px 20px 40px;\r\n    width: 460px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    text-align: center;\r\n    box-shadow: 1px 2px 6px rgba(0,0,0, 0.5);\r\n    -moz-box-shadow: 1px 2px 6px rgba(0,0,0, 0.5);\r\n    -webkit-box-shadow: 1px 2px 6px rgba(0,0,0, 0.5);\r\n    width: 430px;\r\n    height: 240px;\r\n\r\n`;\r\nexport const Input = style.input`  \r\n    margin-left: 15px;\r\n    max-width: 100px;\r\n    padding: 12px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const Main = style.div`\r\n    margin: auto;\r\n    display: grid;\r\n    \r\n    grid-template-columns: 25% 25% 25% 25%;\r\n    grid-gap: 1px;\r\n    padding-top: 5%;\r\n    width: auto;\r\n`;\r\n\r\nexport const Phrase = style.p`\r\nmargin-left: 15px;\r\n    color: #FFF;\r\n    font-size: 120%;\r\n`;\r\n\r\nexport const FaderInput = style.input`\r\n    -webkit-appearance: none;\r\n    margin-left: auto;\r\n    margin: 30px 1%; \r\n    width: 98%;\r\n    &:focus {\r\n        outline: none;\r\n      }\r\n      &::-webkit-slider-runnable-track {\r\n        width: 90%;\r\n        height: 12.8px;\r\n        cursor: pointer;\r\n        animate: 0.2s;\r\n        background: #7C7C7C;\r\n        box-shadow: 0 0 0 4px #3d3d3d; \r\n        border-radius: 25px;\r\n      }\r\n      &::-webkit-slider-thumb {\r\n        height: 20px;\r\n        width: 39px;\r\n        border-radius: 7px;\r\n        background: #F2F2F2;\r\n        cursor: pointer;\r\n        -webkit-appearance: none;\r\n        margin-top: -3.6px;\r\n      }\r\n\r\n &::-webkit-slider-thumb {\r\n     -webkit-appearance: none;\r\n     width: 15px;\r\n     height: 25px;\r\n }\r\n`;\r\n\r\nexport const Code = style.div`\r\n    margin-top: 10%;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    background-color: #091237;\r\n    height: 300px;\r\n    width: 90%;\r\n    border-radius: 20px;\r\n`;\r\nexport const Copy = style.div`\r\n\r\n`;\r\n\r\nexport const Svg = style.svg`\r\n    margin-left: 92%;\r\n    padding-top: 15px;\r\n    width:24px;\r\n    height:24px;\r\n    color: #F1F1F1;\r\n    cursor: pointer;\r\n`;\r\nexport const Span = style.span`\r\n\r\n    font-size: 150%;\r\n    font-family: Courier New;\r\n\r\n`\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n ","import React, { useState } from 'react';\nimport { Logo, Container, Input, Main, Phrase, Surface, GlobalStyle, FaderInput, Code, Svg, Span} from './styles';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nexport default function App() {\n\n  const[tlValue, usetlValue] = useState(0);\n  const[trValue, usetrValue] = useState(0);\n  const[blValue, useblValue] = useState(0);\n  const[brValue, usebrValue] = useState(0);\n  const[totalValue, usetotalValue] = useState(0);\n  const[AllUpdated, useallUpdated] = useState();\n  const[Copied, usecopied] = useState(false);\n  const AllBorders = {\n    'border-radius': `${totalValue}px`\n  };\n  const SpecifyBorders = {\n    'border-top-left-radius': `${tlValue}px`,\n    'border-top-right-radius': `${trValue}px`,\n    'border-bottom-left-radius': `${blValue}px`,\n    'border-bottom-right-radius': `${brValue}px`\n  };\n\n  function updateAll(){\n    usetrValue(totalValue)\n    useblValue(totalValue)\n    usebrValue(totalValue)\n    usetlValue(totalValue)\n  }\n  \n  function copyText(){\n\n    if(AllUpdated){\n      const code = `border-radius: ${AllBorders[\"border-radius\"]};`;\n      const dummy = document.createElement(\"textarea\");\n      document.body.appendChild(dummy);\n      dummy.value = code;\n      dummy.select();\n      dummy.setSelectionRange(0, 99999)\n      document.execCommand(\"copy\");\n      document.body.removeChild(dummy);\n    }else{\n      const code = \n      `\n      border-top-left-radius: ${SpecifyBorders[\"border-top-left-radius\"]};\n      border-top-right-radius: ${SpecifyBorders[\"border-top-right-radius\"]};\n      border-bottom-left-radius: ${SpecifyBorders[\"border-bottom-left-radius\"]};\n      border-bottom-right-radius: ${SpecifyBorders[\"border-bottom-right-radius\"]};\n    \n      `;\n       const dummy = document.createElement(\"textarea\");\n        document.body.appendChild(dummy);\n        dummy.value = code;\n        dummy.select();\n        dummy.setSelectionRange(0, 99999)\n        document.execCommand(\"copy\");\n        document.body.removeChild(dummy);\n    }\n    \n\n    usecopied(true)\n  }\n\n  return (\n    <>\n    <GlobalStyle/>\n    \n        <Container id=\"container\"> \n        <Logo/>\n            <Surface style={AllUpdated ? AllBorders: SpecifyBorders}/>\n            <FaderInput type=\"range\" max=\"160\" onChange={(e) => {\n              useallUpdated(true)\n              updateAll();\n              usetotalValue(e.target.value)\n              }}/>\n            <Main>\n              <div>\n                <Phrase>Superior Esquerdo</Phrase>\n                <Input type=\"number\" value={tlValue} min=\"0\" onChange={(e) => {\n                  useallUpdated(false)\n                  usetlValue(e.target.value)\n              }}/>\n\n              </div>\n                \n              <div>\n                <Phrase>Superior Direito</Phrase>\n                <Input type=\"number\" value={trValue} min=\"0\" onChange={(e) => {\n                  useallUpdated(false) \n                  usetrValue(e.target.value)\n              }}/>\n              </div>\n                \n              <div>\n                <Phrase>Inferior Esquerdo</Phrase>\n                <Input type=\"number\" value={blValue} min=\"0\" onChange={(e) => {\n                  useallUpdated(false) \n                  useblValue(e.target.value)\n              }}/>\n              </div>\n                \n              <div>\n                <Phrase>Inferior Direito</Phrase>\n                <Input type=\"number\" value={brValue} min=\"0\" onChange={(e) => {\n                  useallUpdated(false) \n                  usebrValue(e.target.value)\n              }}/>\n              </div>\n     \n            </Main>\n\n            <Code>\n              \n            <Tooltip title=\"Copiar Texto\" color=\"red\" arrow=\"true\" placement=\"top\" onClick={() => copyText()}>\n            <Svg viewBox=\"0 0 24 24\">\n              <path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\" />\n            </Svg>\n              </Tooltip>\n     \n            <p style={{\"padding-left\": \"20px\"}}>{AllUpdated ? (\n            <>\n            <Span style={{\"color\": \"#737373\"}}>border-box: </Span> \n            <Span style={{\"color\": \"#E74545\"}}>{AllBorders[\"border-radius\"]}</Span>\n            <Span style={{\"color\": \"#737373\"}}>;</Span>\n            </>\n            ):\n            <>\n              <Span style={{\"color\": \"#737373\"}}>border-top-left-radius: </Span> \n            <Span style={{\"color\": \"#E74545\"}}>{SpecifyBorders[\"border-top-left-radius\"]}</Span>\n            <Span style={{\"color\": \"#737373\"}}>;</Span>\n            <br/>\n            <br/>\n            <Span style={{\"color\": \"#737373\"}}>border-top-right-radius: </Span>\n            <Span style={{\"color\": \"#E74545\"}}>{SpecifyBorders[\"border-top-right-radius\"]}</Span>\n            <Span style={{\"color\": \"#737373\"}}>;</Span>\n            <br/>\n            <br/>\n            <Span style={{\"color\": \"#737373\"}}>border-bottom-left-radius: </Span> \n            <Span style={{\"color\": \"#E74545\"}}>{SpecifyBorders[\"border-bottom-left-radius\"]}</Span>\n            <Span style={{\"color\": \"#737373\"}}>;</Span>\n            <br/>\n            <br/>\n            <Span style={{\"color\": \"#737373\"}}>border-bottom-right-radius: </Span> \n            <Span style={{\"color\": \"#E74545\"}}>{SpecifyBorders[\"border-bottom-right-radius\"]}</Span>\n            <Span style={{\"color\": \"#737373\"}}>;</Span>\n            </>\n            }</p>\n            </Code>\n\n            <Snackbar\n              open={Copied}\n              onClose={ () => usecopied(false)}\n              message=\"Copiado!\"\n            />\n        </Container>\n        </>\n  );\n}\n"],"sourceRoot":""}